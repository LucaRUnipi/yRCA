import re

# function comparing the explanations generated by "explain.py" with
# with the "realTrace" produced by "post_process.py"
# (returns the index of the explanation corresponding to "realTrace",
# or -1 if there is no corresponding explanation)
def compareOutputs(explanationsPath,realTracePath):
    # creating a string denoting the "realTrace"
    realTraceFile = open(realTracePath, "r")
    trace = ""
    for rtLine in list(realTraceFile):
        trace += rtLine.replace("\n","")
    realTraceFile.close()
    print(trace)

    # creating a list of strings, each corresponding to one of the possible
    # "explanations" found by "explain.py"
    explanationsFile = open(explanationsPath,"r")
    exp = ""
    exps = []
    for expLine in list(explanationsFile):
        # if finished parsing explanation, adding it to list of explanations
        if expLine=="\n":
            exps.append(exp)
            exp = ""
        # otherwise, continue parsing explanation
        else:
            # removing "[<probability>]", if any
            event = re.sub(r"\[\d+.\d+\]: ","",expLine).replace("\n","")
            # adding event to explanation
            exp += event.replace("\n","")
    explanationsFile.close()

    # returning the index of the real trace in the list of found explanations
    try:
        return exps.index(trace)
    # or -1, otherwise
    except:
        return -1

if __name__ == "__main__":
    explanations = "explanations"
    realTrace = "trace"
    
    expIndex = compareOutputs(explanations,realTrace)
    print(expIndex)
